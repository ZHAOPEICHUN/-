import json
import os

# 待办事项列表
tasks = []

def load_tasks():
    """从文件加载任务"""
    global tasks
    if os.path.exists("tasks.json"):
        with open("tasks.json", "r") as file:
            tasks = json.load(file)

def save_tasks():
    """保存任务到文件"""
    with open("tasks.json", "w") as file:
        json.dump(tasks, file)

def display_menu():
    """显示主菜单"""
    print("\n=== 简易待办事项管理器 ===")
    print("1. 查看所有任务")
    print("2. 添加新任务")
    print("3. 标记任务为已完成")
    print("4. 删除任务")
    print("5. 退出")

def show_tasks():
    """显示所有任务"""
    if not tasks:
        print("目前没有待办事项！")
        return
    
    print("\n=== 你的待办事项 ===")
    for i, task in enumerate(tasks, 1):
        status = "✓" if task["completed"] else " "
        print(f"{i}. [{status}] {task['description']}")

def add_task():
    """添加新任务"""
    description = input("请输入任务描述: ").strip()
    if description:
        task = {
            "description": description,
            "completed": False
        }
        tasks.append(task)
        save_tasks()
        print("任务添加成功！")
    else:
        print("任务描述不能为空！")

def complete_task():
    """标记任务为已完成"""
    show_tasks()
    if not tasks:
        return
    
    try:
        task_num = int(input("请输入要标记为已完成的任务编号: "))
        if 1 <= task_num <= len(tasks):
            tasks[task_num-1]["completed"] = True
            save_tasks()
            print("任务标记为已完成！")
        else:
            print("无效的任务编号！")
    except ValueError:
        print("请输入有效的数字！")

def delete_task():
    """删除任务"""
    show_tasks()
    if not tasks:
        return
    
    try:
        task_num = int(input("请输入要删除的任务编号: "))
        if 1 <= task_num <= len(tasks):
            deleted_task = tasks.pop(task_num-1)
            save_tasks()
            print(f"已删除任务: {deleted_task['description']}")
        else:
            print("无效的任务编号！")
    except ValueError:
        print("请输入有效的数字！")

def main():
    """主程序循环"""
    load_tasks()
    
    while True:
        display_menu()
        choice = input("请选择操作 (1-5): ").strip()
        
        if choice == "1":
            show_tasks()
        elif choice == "2":
            add_task()
        elif choice == "3":
            complete_task()
        elif choice == "4":
            delete_task()
        elif choice == "5":
            print("感谢使用待办事项管理器，再见！")
            break
        else:
            print("无效的选择，请重新输入！")

# 程序入口
if __name__ == "__main__":
    main()
